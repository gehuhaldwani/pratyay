---
import type { GetStaticPaths } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";
import config from "@/config.ts";
import Base from "@/layouts/Base.astro";
import PostCard from "@/components/post/PostCard.astro";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
	const postEntries = (await getCollection("post")).sort(
		(a, b) => b.data.published.valueOf() - a.data.published.valueOf(),
	);

	return paginate(postEntries, { pageSize: config.postsPerPage });
};

type Props = {
	page: {
		data: CollectionEntry<"post">[];
		url: {
			prev: string;
			next: string;
		};
	};
};
const { page } = Astro.props;
---

<Base>
	<section class="container mx-auto max-w-screen-lg px-7 py-10">
		{
			page.data.map((post, index) => {
				return <PostCard postData={post} num={index} />;
			})
		}
		<div class="flex flex-row justify-center gap-7">
			{
				page.url.prev ? (
					<a
						href={page.url.prev}
						class="text-[16px] bg-transparent border-pacamara-secondary border-[1px] leading-none rounded-full py-3 px-5 text-pacamara-secondary hover:bg-pacamara-accent hover:border-pacamara-accent hover:text-pacamara-white transition-all duration-300"
					>
						Previous
					</a>
				) : null
			}
			{
				page.url.next ? (
					<a
						href={page.url.next}
						class="text-[16px] bg-transparent border-pacamara-secondary border-[1px] leading-none rounded-full py-3 px-5 text-pacamara-secondary hover:bg-pacamara-accent hover:border-pacamara-accent hover:text-pacamara-white transition-all duration-300"
					>
						Next
					</a>
				) : null
			}
		</div>
	</section>
</Base>
